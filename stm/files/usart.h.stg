//import "../grammar/stm.stg"

IncludeGuardBegin(headerfileName) ::= <<
#ifndef <headerfileName>
#define <headerfileName>
>>

IncludeGuardEnd(headerfileName) ::= <<
#endif
>>

Header() ::= <<
/*
  this file was auto-generated
*/
>>

Render(model) ::= <<

<Header()>
<IncludeGuardBegin(model.HeaderfileName)>

<RenderBody(model)>

<IncludeGuardEnd(model.HeaderfileName)>

>>

m(name) ::= "m_<name>"

/* declares the usart functions and config member variable */
Usart(usart) ::= <<

void pilot_<usart.Name>_init(void);

uint8_t pilot_<usart.Name>_receive_char(void);

void pilot_<usart.Name>_send_char(char c);

void pilot_<usart.Name>_set_baudrate(int baudrate);

void pilot_<usart.Name>_set_stopbits(uint16_t stopbits);

void pilot_<usart.Name>_set_parity(uint16_t parity);

void pilot_<usart.Name>_set_wordlength(uint16_t wordlength);

>>

RenderBody(model) ::= <<

#include "stm32_conf.h"

<model.Usarts:{usart|<Usart(usart)>}>

>>