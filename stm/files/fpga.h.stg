//import "../grammar/stm.stg"

IncludeGuardBegin(headerfileName) ::= <<
#ifndef <headerfileName>
#define <headerfileName>
>>

IncludeGuardEnd(headerfileName) ::= <<
#endif
>>

Header() ::= <<
/*
  this file was auto-generated
*/
>>

Render(model) ::= <<

<Header()>
<IncludeGuardBegin(model.HeaderfileName)>

<RenderBody(model)>

<IncludeGuardEnd(model.HeaderfileName)>

>>

m(name) ::= "m_<name>"

/* declares the fpga functions */
FPGA(fpga) ::= <<

/* initializes the i8 module */
void pilot_<fpga.Name>_init(void);
int pilot_<fpga.Name>_set_irq_handled(void);
void pilot_<fpga.Name>_send_char(module_port_t port, uint16_t c);
void pilot_<fpga.Name>_send(uint8_t *buffer, int length);
uint8_t pilot_<fpga.Name>_fpga_gpio_set(int8_t chipSelect, int8_t reset);
>>

RenderBody(model) ::= <<

#include "io_stm.h"
#include "common_base.h"

<! functions foreach fpga module !>
<model.FPGAs:{fpga|<FPGA(fpga)>};separator="\n">
>>

