//import "../grammar/stm.stg"

IncludeGuardBegin(headerfileName) ::= <<
#ifndef <headerfileName>
#define <headerfileName>
>>

IncludeGuardEnd(headerfileName) ::= <<
#endif
>>

Header() ::= <<
/*
  this file was auto-generated
*/
>>

Render(model) ::= <<

<Header()>
<IncludeGuardBegin(model.HeaderfileName)>

<RenderBody(model)>

<IncludeGuardEnd(model.HeaderfileName)>

>>

m(name) ::= "m_<name>"

/* declares the demo functions */
Demo(demo) ::= <<

/* initializes the demo module */
int pilot_<demo.Name>_init(void);
int pilot_<demo.Name>_check(void);

/* send the state of the input to the rpi */
uint8_t pilot_<demo.Name>_get_state(uint8_t input);
uint8_t pilot_<demo.Name>_get_value(uint8_t output);
void pilot_<demo.Name>_set_value(uint8_t output, bool value);
>>

RenderBody(model) ::= <<

#include \<stdbool.h>
#include "io_stm.h"

<! functions foreach demo module !>
<model.Demos:{demo|<Demo(demo)>};separator="\n">

>>
